@page
@model IndexModel
@using System.Text.Json
@{
    ViewData["Title"] = "Home page";
}

<!-- ✅ Welcome Section -->
<div class="text-center">
    <h1 class="display-4">Welcome!</h1>
    <p>Quantitative Finance Project</p>
</div>

<!-- 🔄 FLEX CONTAINER FOR WIDGETS -->
<div class="d-flex flex-wrap gap-4">
    <!-- LEFT COLUMN -->
    <div class="d-flex flex-column gap-3" style="flex: 1; min-width: 300px;">
        <!-- ✅ Database Status Widget -->
        <div class="card shadow-sm">
            <div class="card-body d-flex align-items-center justify-content-between">
                <div class="d-flex align-items-center gap-2">
                    <img src="@Url.Content("~/images/azuresql_logo.png")" alt="Azure DB" style="height: 30px;" />
                    <div>
                        <div><strong>Azure SQL Status:</strong></div>
                        <div class="text-muted small">
                            predictive-flow-ms-sql-server.database.windows.net
                            <span id="dbStatus">Checking...</span>
                        </div>
                    </div>
                </div>
                <button id="pingDbBtn" class="btn btn-outline-primary btn-sm">🔄 Ping</button>
            </div>
        </div>

        <!-- ✅ Portfolio Allocation Pie Chart -->
        <div class="card shadow-sm">
            <div class="card-body">
                <h5 class="card-title">Portfolio Allocation</h5>
                @if (Model.HoldingsPieData == null || !Model.HoldingsPieData.Any())
                {
                    <div class="text-muted">No holdings data available to display.</div>
                }
                else
                {
                    <canvas id="portfolioPieChart" width="400" height="400"></canvas>
                }
            </div>
        </div>

        <div class="card shadow-sm">
            <div class="card-body">
                <img src="@Url.Content("~/images/stonks.png")" alt="Stonks" style="height: 300px;">
            </div>
        </div>
    </div>

    <!-- RIGHT COLUMN -->
    <div style="flex: 1; min-width: 300px;">
        <!-- ✅ Line Chart: Portfolio Value -->
        <div class="card shadow-sm h-100">
            <div class="card-body">
                <h5 class="card-title">Portfolio Value</h5>
                <canvas id="lineChart" width="400" height="300"></canvas>
            </div>
        </div>
    </div>
</div>


<!-- ✅ Scripts -->
@section Scripts {
    <script>
        // Ping DB Widget
        async function pingDatabase() {
            const statusSpan = document.getElementById("dbStatus");
            statusSpan.textContent = "Checking...";
            try {
                const res = await fetch("/Api/PingDatabase");
                const data = await res.json();
                statusSpan.textContent = data.status;
            } catch {
                statusSpan.textContent = "Error";
            }
        }

        document.getElementById("pingDbBtn").addEventListener("click", pingDatabase);
        pingDatabase(); // Auto-run on page load
    </script>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const chartData = {
            labels: @Html.Raw(JsonSerializer.Serialize(Model.HoldingsPieData.Select(h => h.Ticker))),
            datasets: [{
                label: 'Holdings',
                data: @Html.Raw(JsonSerializer.Serialize(Model.HoldingsPieData.Select(h => h.NetQuantity))),
                backgroundColor: ['#4e79a7', '#f28e2c', '#e15759', '#76b7b2', '#59a14f', '#edc949', '#af7aa1']
            }]
        };

        if (chartData.labels.length > 0) {
            const ctx = document.getElementById('portfolioPieChart').getContext('2d');
            new Chart(ctx, {
                type: 'pie',
                data: chartData,
            });
        }
    </script>
    <script>
        const lineCtx = document.getElementById('lineChart').getContext('2d');

        new Chart(lineCtx, {
            type: 'line',
            data: {
                labels: ['2025-07-17', '2025-07-18', '2025-07-23', '2025-07-25', '2025-07-28', '2025-07-29'],
                datasets: [{
                    label: 'Portfolio Value',
                    data: [69.68, 103.72, 187.17, 236.47, 283.7, 392.61],
                    borderColor: 'rgba(75, 192, 192, 1)',
                    fill: false,
                    tension: 0.3,
                    pointRadius: 4,
                    pointHoverRadius: 6
                }]
            },
            options: {
                responsive: true,
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: 'Date'
                        }
                    },
                    y: {
                        title: {
                            display: true,
                            text: 'Price ($)'
                        }
                    }
                }
            }
        });
    </script>

}
